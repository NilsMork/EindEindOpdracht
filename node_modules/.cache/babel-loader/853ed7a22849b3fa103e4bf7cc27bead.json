{"ast":null,"code":"var _jsxFileName = \"/Users/NlsMrk/Desktop/EindEindOpdracht/src/App.js\";\nimport React from 'react';\nimport Students from \"./components/Students\";\nimport Home from \"./components/Home\";\nimport AllData from './AllData';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'; // import Victory from './victory/Victory';\n\nimport './App.css';\n\nfunction App() {\n  const studentList = [...new Set(AllData.map(item => item.name))].sort((name1, name2) => {\n    if (name1 > name2) {\n      return 1;\n    } else if (name1 === name2) {\n      return 0;\n    } else if (name1 < name2) {\n      return -1;\n    }\n\n    return 0;\n  });\n  const sortAllNames = AllData.map(item => item.name);\n  console.log(\"alle-namen: \", sortAllNames);\n  const sortAllAssignments = AllData.map(item => item.assignment);\n  console.log(\"alle-assignments: \", sortAllAssignments);\n  const removeDoubleNames = [...new Set(AllData.map(item => item.name))];\n  console.log(\"Student-niet-dubbel: \", removeDoubleNames);\n  const createlinks = removeDoubleNames.map(name => /*#__PURE__*/React.createElement(\"li\", {\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, name)));\n  const createRoute = removeDoubleNames.map(name => /*#__PURE__*/React.createElement(Route, {\n    path: `/${name}`,\n    key: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Students, {\n    studentName: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  })));\n  const sortDifficulty = [...new Set(AllData.map(item => item.difficulty))];\n  console.log(\"sortDifficulty: \", sortDifficulty);\n  const sortEnjoyment = [...new Set(AllData.map(item => item.enjoyment))];\n  console.log(\"sortDifficulty: \", sortEnjoyment);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"navLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Home\"), createlinks), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    studentList: studentList,\n    sortAllAssignments: sortAllAssignments,\n    AllData: AllData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, createRoute))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/NlsMrk/Desktop/EindEindOpdracht/src/App.js"],"names":["React","Students","Home","AllData","BrowserRouter","Router","Switch","Route","Link","App","studentList","Set","map","item","name","sort","name1","name2","sortAllNames","console","log","sortAllAssignments","assignment","removeDoubleNames","createlinks","createRoute","sortDifficulty","difficulty","sortEnjoyment","enjoyment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Students from \"./components/Students\"\nimport Home from \"./components/Home\"\nimport AllData from './AllData'\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import Victory from './victory/Victory';\nimport './App.css';\n\nfunction App() {\n\n  const studentList = [...new Set(AllData.map((item) => item.name))].sort((name1, name2) => {\n    if (name1 > name2) {\n       return 1;\n    } else if (name1 === name2) {\n       return 0;\n    } else if (name1 < name2) {\n       return -1;\n    }\n    return 0;\n });\n\n  const sortAllNames = AllData.map((item) => item.name);\n  console.log(\"alle-namen: \", sortAllNames);\n\n  const sortAllAssignments = AllData.map((item) => item.assignment);\n  console.log(\"alle-assignments: \", sortAllAssignments);\n\n  const removeDoubleNames = [...new Set(AllData.map((item) => item.name))];\n  console.log(\"Student-niet-dubbel: \", removeDoubleNames);\n\n\n  const createlinks = removeDoubleNames.map((name) => (\n    <li key={name}>\n      <Link to={`/${name}`}>{name}</Link>\n    </li>\n  ))\n\n  const createRoute = removeDoubleNames.map((name) => (\n    <Route path={`/${name}`} key={name}>\n      <Students\n        studentName={name}\n      />\n    </Route>\n  ))\n\n  const sortDifficulty = [...new Set(AllData.map((item) => item.difficulty))];\n  console.log(\"sortDifficulty: \", sortDifficulty);\n\n  const sortEnjoyment = [...new Set(AllData.map((item) => item.enjoyment))];\n  console.log(\"sortDifficulty: \", sortEnjoyment);\n\n  return (\n    \n    <Router>\n      <div>\n        <ul className=\"navLinks\">\n          <Link to=\"/\">Home</Link>\n          {createlinks}\n        </ul>\n        <Switch>\n          <Route path=\"/\" exact> \n            <Home\n            studentList={studentList}\n            sortAllAssignments={sortAllAssignments}\n            AllData={AllData}\n          />\n          </Route>\n          <Route>\n          {createRoute}\n          </Route>\n        </Switch>\n      </div>\n      <div>\n      {/* <Victory /> */}\n      </div>\n    </Router>\n    \n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}